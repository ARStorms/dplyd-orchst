#!/bin/sh
#Installing and configuring components
dnf install 'dnf-command(config-manager)' -y
dnf config-manager --add-repo https://cli.github.com/packages/rpm/gh-cli.repo
dnf install gh git nano nginx openssl podman redir rsync tmux wget zip -y
exctnOtcmGrade=$(command -v btop)
while [ "$exctnOtcmGrade" == "" ] ; do
        snap install btop
	exctnOtcmGrade=$(command -v btop)
done
snap install certbot --classic
snap install micro   --classic
semanage port -a -t http_port_t  -p tcp 1080
semanage port -a -t http_port_t  -p tcp 1443
setsebool -P  httpd_can_network_connect on
mkdir -p /etc/nginx/dplyd
mkdir -p /etc/nginx/tls
openssl req -x509 -nodes  -days 1825 -newkey rsa:2048 -keyout /etc/nginx/tls/nginx.key \
 	   -out /etc/nginx/tls/nginx.crt -batch
cat << 'EOF' > /etc/nginx/nginx.conf
user nginx;
worker_processes auto;
error_log /var/log/nginx/error.log;
pid /run/nginx.pid;
include /usr/share/nginx/modules/*.conf;
events {
    worker_connections 25000;
}
http   {
    log_format  main  '$remote_addr - $remote_user [$time_local] "$request" '
                      '$status $body_bytes_sent "$http_referer" '
                      '"$http_user_agent" "$http_x_forwarded_for"';
    access_log  /var/log/nginx/access.log  main;
    sendfile            on;
    tcp_nopush          on;
    tcp_nodelay         on;
    keepalive_timeout   300;
    types_hash_max_size 4096;
    include             /etc/nginx/mime.types;
    default_type        application/octet-stream;
    include /etc/nginx/conf.d/*.conf;
    server  {
        listen 80; listen 1080;
        server_name  _;
        root         /usr/share/nginx/html;
        include /etc/nginx/default.d/*.conf;
        error_page 404 /404.html;
        location = /404.html {
        }
        error_page 500 502 503 504 /50x.html;
        location = /50x.html {
        }
        return 302 http://arstorms.org/d/project-initial-home;
    }
    server {
        listen 443 ssl http2; listen 1443 ssl http2;
        server_name  _;
        root         /usr/share/nginx/html;
		ssl_certificate_key /etc/nginx/tls/nginx.key;
		ssl_certificate     /etc/nginx/tls/nginx.crt;
        ssl_session_cache shared:SSL:1m;
        ssl_session_timeout  10m;
        ssl_ciphers PROFILE=SYSTEM;
        ssl_prefer_server_ciphers on;
        include /etc/nginx/default.d/*.conf;
        error_page 404 /404.html;
            location = /40x.html {
        }
        error_page 500 502 503 504 /50x.html;
            location = /50x.html {
        }
        return 302 http://arstorms.org/d/project-initial-home;
    }
    client_max_body_size 100K;
    include /etc/nginx/dplyd/*.conf;
}
EOF
mkdir -p /etc/systemd/system/user@.service.d
echo  "" | tee -a      /etc/systemd/system/user@.service.d/delegate.conf
python3 ./dplyd-orchst-server-setup3-01.py
sed   -i '/Delegate/d' /etc/systemd/system/user@.service.d/delegate.conf
sed   -i '/^$/d'       /etc/systemd/system/user@.service.d/delegate.conf
sed   -i 's/\[Service\]/\[Service\]\
Delegate=cpu cpuset memory pids/' /etc/systemd/system/user@.service.d/delegate.conf
cat   << 'EOF' > /etc/chrony.conf
server     time.cloudflare.com prefer iburst
keyfile    /etc/chrony.keys
driftfile  /var/lib/chrony/drift
makestep   1.0 3
rtcsync
leapsectz  right/UTC
ntsdumpdir /var/lib/chrony
logdir     /var/log/chrony
EOF
#Starting up components
systemctl enable  nginx
systemctl enable  podman
systemctl restart chronyd
systemctl start   nginx
systemctl start   podman
systemctl reboot
